version: 2.1

executors:
  ubuntu:
    working_directory: ~/repo
    docker:
      - image: cimg/openjdk:15.0.2
    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

commands:
  read_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

  write_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

jobs:
  linux-build:
    executor: ubuntu
    steps:
      - checkout
      - read_cache

      - run:
          name: "Run tests"
          command: ./gradlew iTest

      - run:
          name: "Create Package deb"
          command: ./gradlew packageDeb

      - write_cache

      - store_test_results:
          path: ~/repo/build/test-results/iTest/

      - run:
          name: "Make and store deb to workspace"
          command: mkdir -p artifacts; cp ~/repo/build/compose/binaries/main/deb/

      - persist_to_workspace:
          root: artifacts
          paths:
            - *

      - store_artifacts:
          path: artifacts/

  publish-github-release:
    docker:
      - image: cibuilds/github
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifacts/

workflows:
  version: 2.1
  all-os-build:
    jobs:
      - linux-build:
          filters:
            tags:
              only: /.*/ # Runs on every branch and tag
      - publish-github-release:
          requires:
            - linux-build
          filters:
            branches:
              ignore: /.*/ # Does not publish on any branch, tags only
            tags:
              only: /^\d+\.\d+\.\d+$/ # Only publishs on tags with this format: 1.2.3
